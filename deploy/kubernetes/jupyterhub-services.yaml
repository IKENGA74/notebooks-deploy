# External JupyterHub UI Service definition
apiVersion: v1
kind: Service
metadata:
  name: jupyterhub
  namespace: default
spec:
  type: NodePort
  ports:
  - port: 80
    name: http
    targetPort: jupyter-http
  selector:
    application: jupyterhub
---
# Internal JupyterHub API Service definition
apiVersion: v1
kind: Service
metadata:
  name: jupyterhub-internal
spec:
  ports:
  - port: 8081
    name: http
    # Use named container port.
    targetPort: jupyter-in
  selector:
    application: jupyterhub
---
# Nginx ingress definition
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
  name: jupyterhub-ingress
spec:
  rules:
  - host: JUPYTERHUB_URL_VALUE
    http:
      paths:
      - backend:
          serviceName: jupyterhub
          servicePort: 80
        path: /
---
apiVersion: v1
kind: Service
metadata:
  name: argo-ui
  namespace: argo
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 8001
  selector:
    app: argo-ui
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  name: argo-ui
  namespace: argo
spec:
  rules:
  - host: ARGO_URL_VALUE
    http:
      paths:
      - backend:
          serviceName: argo-ui
          servicePort: 80
        path: /
---
apiVersion: v1
kind: Service
metadata:
  name: rook-ceph-mgr-dashboard-external-https
  namespace: rook-ceph
  labels:
    app: rook-ceph-mgr
    rook_cluster: rook-ceph
spec:
  ports:
  - name: dashboard
    port: 8443
    protocol: TCP
    targetPort: 8443
  selector:
    app: rook-ceph-mgr
    rook_cluster: rook-ceph
  sessionAffinity: None
  type: NodePort
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  name: rook-ceph-ui
  namespace: rook-ceph
spec:
  rules:
  - host: ROOK_CEPH_URL_VALUE
    http:
      paths:
      - backend:
          serviceName: rook-ceph-mgr-dashboard-external-https
          servicePort: 8443
        path: /